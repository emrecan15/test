package com.filmonersene.website.entities;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinTable;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Entity
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
@Table(name="movies")
public class Movie {
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;
	
	@Column(name="posterUrl")
	private String posterUrl;
	
	@Column(name="movie_name")
	private String movieName;
	
	@Column(name="description")
	private String description;
	
	@Column(name="year")
	private int year;
	
	@Column(name="runtime")
	private String runtime;
	
	@Column(name="imdbVotes")
	private String imdbVotes;
	
	@Column(name="director")
	private String director;
	
	@ManyToMany(cascade = {CascadeType.PERSIST, CascadeType.MERGE})
	@JoinTable(
	    name = "movie_genres",
	    joinColumns = @JoinColumn(name = "movie_id"),
	    inverseJoinColumns = @JoinColumn(name = "genre_id")
	)
	private Set<Genre> genres = new HashSet<>();
	
	
	
	@OneToMany(mappedBy = "movie", cascade = CascadeType.ALL)
	private List<Comment> comments;

	@OneToMany(mappedBy = "movie", cascade = CascadeType.ALL)
	private List<MovieLike> likes;
}
